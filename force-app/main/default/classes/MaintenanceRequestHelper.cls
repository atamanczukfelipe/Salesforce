/**
 * @description       : Apex Specialist Superbadge
 * @author            : Felipe Atamanczuk
 * @group             : 
 * @last modified on  : 10-27-2020
 * @last modified by  : Felipe Atamanczuk
 * Modifications Log 
 * Ver   Date         Author              Modification
 * 1.0   10-27-2020   Felipe Atamanczuk   Initial Version
**/
public with sharing class MaintenanceRequestHelper {

   public static void updateWorkOrders(Map<Id, Case> applicableCases){
       Map<Id, Integer> mapProduct = new Map <Id, Integer>();
       List<Case> newCaseList = new List<Case>();
       List<Product2> listProduct = [SELECT Id, Maintenance_Cycle__c  FROM Product2];
       for (Product2 p : listProduct) {
           if (p != null) {
               if(p.Maintenance_Cycle__c != null){
                   mapProduct.put(p.Id, Integer.valueOf(p.Maintenance_Cycle__c));
               }
           }
       }
       for (Case a : applicableCases.values()) {
           Case newCase = new Case();
           newCase.Vehicle__c = a.Vehicle__c;
           newCase.Equipment__c = a.Equipment__c;
           newCase.Type = 'Routine Maintenance';
           newCase.Subject = String.isBlank(a.Subject) ? 'Routine Maintenance Request' : a.Subject;
           newCase.Date_Reported__c = Date.today();
           newCase.Status = 'New';
           newCase.Product__c = a.Product__c;
           newCase.AccountId = a.AccountId;
           newCase.ContactId = a.ContactId;
           newCase.AssetId = a.AssetId;
           newCase.Origin = a.Origin;
           newCase.Reason = a.Reason;
           newCase.Date_Due__c = (mapProduct.get(a.Id) != null)? (Date.today().addDays(Integer.valueof(mapProduct.get(a.Id)))) : (Date.today());
           newCaseList.add(newCase);
       }
       if (newCaseList.size() >0) {
           insert newCaseList;
       }
   }   
}